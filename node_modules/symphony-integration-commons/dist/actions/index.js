'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getAppParams = exports.resetMessage = exports.showNoInstancesFound = exports.showRequireRooms = exports.hideRequireRooms = exports.hideRequireName = exports.showRequireName = exports.getInstanceList = exports.submitDone = exports.resetPostingLocationRooms = exports.getInstanceInfo = exports.removeInstance = exports.editInstance = exports.saveInstance = exports.removeStreamFromInstance = exports.addStreamToInstance = exports.changeStreamType = exports.changeInstanceName = exports.operations = exports.SUCCESSFULLY_UPDATED_MESSAGE = exports.SUCCESSFULLY_REMOVED_MESSAGE = exports.SUCCESSFULLY_CREATED_MESSAGE = exports.ROOMS_IS_REQUIRED = exports.NAME_IS_REQUIRED = exports.FAILED_OPERATION_MESSAGE = exports.NO_INSTANCES_FOUND_MESSAGE = exports.SUCCESSFULLY_UPDATED = exports.SUCCESSFULLY_REMOVED = exports.SUCCESSFULLY_CREATED = exports.SUBMIT_DONE = exports.SET_APP_NAME = exports.SAVE_INSTANCE_FAILED = exports.SAVE_INSTANCE = exports.RESET_POSTING_LOCATION_ROOMS = exports.RESET_MESSAGE = exports.REMOVE_STREAM_FROM_INSTANCE = exports.REMOVE_INSTANCE = exports.REQUIRED_ROOMS = exports.REQUIRED_NAME = exports.NO_INSTANCES_FOUND = exports.MESSAGE_ERROR = exports.GET_INSTANCE_INFO = exports.GET_ACTIVE_INSTANCE_RESETED = exports.FETCH_USER_ID_SUCCESS = exports.FETCH_ROOMS_SUCCESS = exports.FETCH_INSTANCE_LIST_SUCCESS = exports.FETCH_INSTANCE_LIST = exports.FETCH_FAILED = exports.FAILED_OPERATION = exports.HIDE_REQUIRE_ROOMS = exports.HIDE_REQUIRE_NAME = exports.GET_APP_INSTRUCTIONS = exports.GET_APP_PARAMS = exports.EDIT_INSTANCE = exports.CREATE_IM_FAILED = exports.CHANGE_STREAM_TYPE = exports.CHANGE_INSTANCE_NAME = exports.CALL_SAVE_INSTANCE = exports.ADD_STREAM_TO_INSTANCE = exports.ADD_MEMBER_SHIP_FAILED = exports.INTEGRATION_TOGGLE_SETUP_INSTRUCTIONS = exports.INTEGRATION_IM_SHORTHAND = exports.INTEGRATION_NAME = exports.INTEGRATION_SUBTITLE = exports.INTEGRATION_TITLE = exports.INTEGRATION_LOGO = undefined;

var _config = require('../js/config.service');

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Custom actions from boilerplate
var INTEGRATION_LOGO = exports.INTEGRATION_LOGO = _config2.default.getParams.appLogo; /* eslint-disable no-unused-vars */
/* eslint-disable no-debugger */
// import Config from '../js/Config.service';
var INTEGRATION_TITLE = exports.INTEGRATION_TITLE = _config2.default.getParams.appTitle;
var INTEGRATION_SUBTITLE = exports.INTEGRATION_SUBTITLE = _config2.default.getParams.appSubTitle;
var INTEGRATION_NAME = exports.INTEGRATION_NAME = _config2.default.getParams.appName;
var INTEGRATION_IM_SHORTHAND = exports.INTEGRATION_IM_SHORTHAND = _config2.default.getParams.appIMShortHand;
var INTEGRATION_TOGGLE_SETUP_INSTRUCTIONS = exports.INTEGRATION_TOGGLE_SETUP_INSTRUCTIONS = _config2.default.getParams.appToggleSetupInstructions;

// General actions
var ADD_MEMBER_SHIP_FAILED = exports.ADD_MEMBER_SHIP_FAILED = 'ADD_MEMBER_SHIP_FAILED';
var ADD_STREAM_TO_INSTANCE = exports.ADD_STREAM_TO_INSTANCE = 'ADD_STREAM_TO_INSTANCE';
var CALL_SAVE_INSTANCE = exports.CALL_SAVE_INSTANCE = 'CALL_SAVE_INSTANCE';
var CHANGE_INSTANCE_NAME = exports.CHANGE_INSTANCE_NAME = 'CHANGE_INSTANCE_NAME';
var CHANGE_STREAM_TYPE = exports.CHANGE_STREAM_TYPE = 'CHANGE_STREAM_TYPE';
var CREATE_IM_FAILED = exports.CREATE_IM_FAILED = 'CREATE_IM_FAILED';
var EDIT_INSTANCE = exports.EDIT_INSTANCE = 'EDIT_INSTANCE';
var GET_APP_PARAMS = exports.GET_APP_PARAMS = 'GET_APP_PARAMS';
var GET_APP_INSTRUCTIONS = exports.GET_APP_INSTRUCTIONS = 'GET_APP_INSTRUCTIONS';
var HIDE_REQUIRE_NAME = exports.HIDE_REQUIRE_NAME = 'HIDE_REQUIRE_NAME';
var HIDE_REQUIRE_ROOMS = exports.HIDE_REQUIRE_ROOMS = 'HIDE_REQUIRE_ROOMS';
var FAILED_OPERATION = exports.FAILED_OPERATION = 'FAILED_OPERATION';
var FETCH_FAILED = exports.FETCH_FAILED = 'FETCH_FAILED';
var FETCH_INSTANCE_LIST = exports.FETCH_INSTANCE_LIST = 'FETCH_INSTANCE_LIST';
var FETCH_INSTANCE_LIST_SUCCESS = exports.FETCH_INSTANCE_LIST_SUCCESS = 'FETCH_INSTANCE_LIST_SUCCESS';
var FETCH_ROOMS_SUCCESS = exports.FETCH_ROOMS_SUCCESS = 'FETCH_ROOMS_SUCCESS';
var FETCH_USER_ID_SUCCESS = exports.FETCH_USER_ID_SUCCESS = 'FETCH_USER_ID_SUCCESS';
var GET_ACTIVE_INSTANCE_RESETED = exports.GET_ACTIVE_INSTANCE_RESETED = 'GET_ACTIVE_INSTANCE_RESETED';
var GET_INSTANCE_INFO = exports.GET_INSTANCE_INFO = 'GET_INSTANCE_INFO';
var MESSAGE_ERROR = exports.MESSAGE_ERROR = 'MESSAGE_ERROR';
var NO_INSTANCES_FOUND = exports.NO_INSTANCES_FOUND = 'NO_INSTANCES_FOUND';
var REQUIRED_NAME = exports.REQUIRED_NAME = 'REQUIRED_NAME';
var REQUIRED_ROOMS = exports.REQUIRED_ROOMS = 'REQUIRED_ROOMS';
var REMOVE_INSTANCE = exports.REMOVE_INSTANCE = 'REMOVE_INSTANCE';
var REMOVE_STREAM_FROM_INSTANCE = exports.REMOVE_STREAM_FROM_INSTANCE = 'REMOVE_STREAM_FROM_INSTANCE';
var RESET_MESSAGE = exports.RESET_MESSAGE = 'RESET_MESSAGE';
var RESET_POSTING_LOCATION_ROOMS = exports.RESET_POSTING_LOCATION_ROOMS = 'RESET_POSTING_LOCATION_ROOMS';
var SAVE_INSTANCE = exports.SAVE_INSTANCE = 'SAVE_INSTANCE';
var SAVE_INSTANCE_FAILED = exports.SAVE_INSTANCE_FAILED = 'SAVE_INSTANCE_FAILED';
var SET_APP_NAME = exports.SET_APP_NAME = 'SET_APP_NAME';
var SUBMIT_DONE = exports.SUBMIT_DONE = 'SUBMIT_DONE';
var SUCCESSFULLY_CREATED = exports.SUCCESSFULLY_CREATED = 'SUCCESSFULLY_CREATED';
var SUCCESSFULLY_REMOVED = exports.SUCCESSFULLY_REMOVED = 'SUCCESSFULLY_REMOVED';
var SUCCESSFULLY_UPDATED = exports.SUCCESSFULLY_UPDATED = 'SUCCESSFULLY_UPDATED';

// Message Actions
var NO_INSTANCES_FOUND_MESSAGE = exports.NO_INSTANCES_FOUND_MESSAGE = 'No Webhook Instances were found.';
var FAILED_OPERATION_MESSAGE = exports.FAILED_OPERATION_MESSAGE = 'An error has ocurred and the operation could not be completed. Please try again later.';
var NAME_IS_REQUIRED = exports.NAME_IS_REQUIRED = 'Description is required!';
var ROOMS_IS_REQUIRED = exports.ROOMS_IS_REQUIRED = 'Posting Location is required!';
var SUCCESSFULLY_CREATED_MESSAGE = exports.SUCCESSFULLY_CREATED_MESSAGE = 'You have successfully Configured a new #INTEGRATION_NAME integration. Register your Configured integration on #INTEGRATION_NAME to complete setup.';
var SUCCESSFULLY_REMOVED_MESSAGE = exports.SUCCESSFULLY_REMOVED_MESSAGE = 'Instance removed from Symphony. You can now remove the webhook from #INTEGRATION_NAME';
var SUCCESSFULLY_UPDATED_MESSAGE = exports.SUCCESSFULLY_UPDATED_MESSAGE = 'You have successfully updated your #INTEGRATION_NAME integration.';

// Other constants
var operations = exports.operations = {
  CREATE: 'CREATE',
  UPDATE: 'UPDATE',
  REMOVE: 'REMOVE'
};

// Actions creators
var changeInstanceName = exports.changeInstanceName = function changeInstanceName(name) {
  return {
    type: CHANGE_INSTANCE_NAME,
    name: name
  };
};

var changeStreamType = exports.changeStreamType = function changeStreamType(streamType) {
  return {
    type: CHANGE_STREAM_TYPE,
    streamType: streamType
  };
};

var addStreamToInstance = exports.addStreamToInstance = function addStreamToInstance(room) {
  return {
    type: ADD_STREAM_TO_INSTANCE,
    room: room
  };
};

var removeStreamFromInstance = exports.removeStreamFromInstance = function removeStreamFromInstance(room) {
  return {
    type: REMOVE_STREAM_FROM_INSTANCE,
    room: room
  };
};

var saveInstance = exports.saveInstance = function saveInstance() {
  return {
    type: SAVE_INSTANCE
  };
};

var editInstance = exports.editInstance = function editInstance(instance) {
  return {
    type: EDIT_INSTANCE,
    instance: instance
  };
};

var removeInstance = exports.removeInstance = function removeInstance(instance) {
  return {
    type: REMOVE_INSTANCE,
    instance: instance
  };
};

var getInstanceInfo = exports.getInstanceInfo = function getInstanceInfo(instance) {
  return {
    type: GET_INSTANCE_INFO,
    instance: instance
  };
};

var resetPostingLocationRooms = exports.resetPostingLocationRooms = function resetPostingLocationRooms() {
  return {
    type: RESET_POSTING_LOCATION_ROOMS
  };
};

var submitDone = exports.submitDone = function submitDone() {
  return {
    type: SUBMIT_DONE
  };
};

var getInstanceList = exports.getInstanceList = function getInstanceList() {
  return {
    type: FETCH_INSTANCE_LIST
  };
};

var showRequireName = exports.showRequireName = function showRequireName(state) {
  return {
    type: REQUIRED_NAME
  };
};

var hideRequireName = exports.hideRequireName = function hideRequireName(state) {
  return {
    type: HIDE_REQUIRE_NAME
  };
};

var hideRequireRooms = exports.hideRequireRooms = function hideRequireRooms(state) {
  return {
    type: HIDE_REQUIRE_ROOMS
  };
};

var showRequireRooms = exports.showRequireRooms = function showRequireRooms() {
  return {
    type: REQUIRED_ROOMS
  };
};

var showNoInstancesFound = exports.showNoInstancesFound = function showNoInstancesFound() {
  return {
    type: NO_INSTANCES_FOUND
  };
};

var resetMessage = exports.resetMessage = function resetMessage() {
  return {
    type: RESET_MESSAGE
  };
};

var getAppParams = exports.getAppParams = function getAppParams() {
  return {
    type: GET_APP_PARAMS
  };
};