'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

require('./styles/styles.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MessageBox = function (_Component) {
  _inherits(MessageBox, _Component);

  function MessageBox(props) {
    _classCallCheck(this, MessageBox);

    var _this = _possibleConstructorReturn(this, (MessageBox.__proto__ || Object.getPrototypeOf(MessageBox)).call(this, props));

    _this.state = {
      visible: _this.props.type !== '',
      containerStyle: 'message-box-container wrapper',
      boxStyle: 'show-box'
    };
    _this.closeBox = _this.closeBox.bind(_this);
    return _this;
  }

  _createClass(MessageBox, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      if (this.props !== nextProps) {
        if (nextProps.type !== '' && nextProps.type !== 'success') {
          this.setState({
            visible: true
          });
          var boxes = this.container.children;
          this.props.text.map(function (msg) {
            for (var i = 0, l = boxes.length; i < l; i += 1) {
              if (boxes[i].getElementsByTagName('p')[0].innerHTML === msg) {
                boxes[i].className = 'message-box ' + _this2.props.type + ' show-box';
              }
            }
          });
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      var _this3 = this;

      this.setState({
        containerStyle: 'message-box-container wrapper closed'
      });
      var boxes = this.container.children;
      this.props.text.map(function () {
        for (var i = 0, l = boxes.length; i < l; i += 1) {
          boxes[i].className = 'message-box ' + _this3.props.type + ' hide-box';
        }
      });
    }
  }, {
    key: 'closeBox',
    value: function closeBox(idx) {
      this[idx].className = 'message-box ' + this.props.type + ' hide-box';
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      return _react2.default.createElement(
        'div',
        {
          className: this.state.containerStyle,
          ref: function ref(container) {
            _this4.container = container;
          }
        },
        this.state.visible && this.props.text.map(function (msg, idx) {
          return _react2.default.createElement(
            'div',
            {
              className: 'message-box ' + _this4.props.type + ' show-box',
              ref: function ref(elem) {
                _this4[idx] = elem;
              },
              key: idx
            },
            _react2.default.createElement(
              'p',
              null,
              msg
            ),
            _react2.default.createElement(
              'button',
              { onClick: function onClick() {
                  _this4.closeBox(idx);
                } },
              _react2.default.createElement('i', { className: 'fa fa-times' })
            )
          );
        })
      );
    }
  }]);

  return MessageBox;
}(_react.Component);

MessageBox.propTypes = {
  type: _react.PropTypes.string.isRequired,
  text: _react.PropTypes.arrayOf(_react.PropTypes.string).isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  return {
    type: state.message.type,
    text: state.message.text
  };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps)(MessageBox);