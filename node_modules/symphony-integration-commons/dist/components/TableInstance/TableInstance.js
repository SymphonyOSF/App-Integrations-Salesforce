'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRouter = require('react-router');

var _DataRow = require('./DataRow');

var _DataRow2 = _interopRequireDefault(_DataRow);

var _Spinner = require('../../components/Spinner/Spinner');

var _Spinner2 = _interopRequireDefault(_Spinner);

require('../../styles/main.less');

require('./styles/styles.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable react/no-unused-prop-types */


var TableInstance = function (_Component) {
  _inherits(TableInstance, _Component);

  function TableInstance(props) {
    _classCallCheck(this, TableInstance);

    var _this = _possibleConstructorReturn(this, (TableInstance.__proto__ || Object.getPrototypeOf(TableInstance)).call(this, props));

    _this.onClickEdit = _this.onClickEdit.bind(_this);
    _this.onClickRemove = _this.onClickRemove.bind(_this);
    return _this;
  }

  _createClass(TableInstance, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.props.getInstanceList();
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.firstScreen && nextProps.instanceList.length === 0 && !nextProps.loading) {
        _reactRouter.hashHistory.push('/create-view');
        return;
      }
      if (nextProps.instanceList.length === 0 && !nextProps.loading) {
        this.props.showNoInstancesFound();
      }
    }
  }, {
    key: 'onClickEdit',
    value: function onClickEdit(_instance) {
      this.props.resetMessage();
      this.props.showEditInstanceView(_instance);
      _reactRouter.hashHistory.push('/edit-view');
    }
  }, {
    key: 'onClickRemove',
    value: function onClickRemove(_instance) {
      this.props.showEditInstanceView(_instance);
      _reactRouter.hashHistory.push('/remove-view');
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        'div',
        null,
        this.props.loading && _react2.default.createElement(_Spinner2.default, null),
        _react2.default.createElement(
          'div',
          { className: 'wrapper table-instance' },
          _react2.default.createElement(
            'table',
            { className: this.props.loading ? 'instances' : 'instances table-opacity-1' },
            _react2.default.createElement(
              'thead',
              null,
              _react2.default.createElement(
                'tr',
                null,
                _react2.default.createElement(
                  'th',
                  null,
                  _react2.default.createElement(
                    'span',
                    null,
                    'Description'
                  )
                ),
                _react2.default.createElement(
                  'th',
                  null,
                  _react2.default.createElement(
                    'span',
                    null,
                    'Active in'
                  )
                ),
                _react2.default.createElement(
                  'th',
                  null,
                  _react2.default.createElement(
                    'span',
                    null,
                    'Webhook URL'
                  )
                ),
                _react2.default.createElement(
                  'th',
                  null,
                  _react2.default.createElement(
                    'span',
                    null,
                    'Last Posted'
                  )
                ),
                _react2.default.createElement(
                  'th',
                  null,
                  _react2.default.createElement(
                    'span',
                    null,
                    'Actions'
                  )
                )
              )
            ),
            _react2.default.createElement(
              'tbody',
              null,
              this.props.instanceList.map(function (item, index) {
                var _instance = {
                  name: item.name,
                  appName: _this2.props.appName,
                  streamType: item.streamType,
                  instanceId: item.instanceId,
                  baseWebHookURL: _this2.props.baseWebHookURL,
                  postingLocationRooms: item.postingLocationRooms,
                  lastPosted: item.lastPosted
                };
                return _react2.default.createElement(_DataRow2.default, {
                  instance: _instance,
                  onClickEdit: _this2.onClickEdit,
                  onClickRemove: _this2.onClickRemove,
                  key: index,
                  id: index
                });
              })
            )
          )
        )
      );
    }
  }]);

  return TableInstance;
}(_react.Component);

TableInstance.propTypes = {
  appName: _react.PropTypes.string.isRequired,
  instanceList: _react.PropTypes.arrayOf(_react.PropTypes.object).isRequired,
  loading: _react.PropTypes.bool.isRequired,
  baseWebHookURL: _react.PropTypes.string,
  getInstanceList: _react.PropTypes.func.isRequired,
  firstScreen: _react.PropTypes.bool.isRequired,
  showEditInstanceView: _react.PropTypes.func.isRequired,
  resetMessage: _react.PropTypes.func.isRequired,
  typeMessage: _react.PropTypes.string.isRequired,
  showNoInstancesFound: _react.PropTypes.func.isRequired
};

exports.default = TableInstance;