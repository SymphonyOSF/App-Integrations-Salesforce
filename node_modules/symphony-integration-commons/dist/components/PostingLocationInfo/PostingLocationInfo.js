'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _RoomBoxInfo = require('./RoomBoxInfo');

var _RoomBoxInfo2 = _interopRequireDefault(_RoomBoxInfo);

require('./styles/styles.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable react/no-unused-prop-types */
var PostingLocationInfo = function PostingLocationInfo(_ref) {
  var postingLocations = _ref.postingLocations,
      streamType = _ref.streamType;
  return _react2.default.createElement(
    'div',
    null,
    streamType === 'CHATROOM' && _react2.default.createElement(
      'div',
      { className: 'wrapper posting-location-info' },
      _react2.default.createElement(
        'header',
        null,
        _react2.default.createElement(
          'h2',
          null,
          'Active In'
        )
      ),
      _react2.default.createElement(
        'ul',
        null,
        postingLocations.map(function (room, idx) {
          return _react2.default.createElement(
            'li',
            { key: idx },
            _react2.default.createElement(_RoomBoxInfo2.default, {
              name: room.name,
              publicRoom: room.publicRoom,
              memberCount: room.memberCount,
              creatorPrettyName: room.creatorPrettyName
            })
          );
        })
      )
    )
  );
};

PostingLocationInfo.propTypes = {
  postingLocations: _react.PropTypes.arrayOf(_react.PropTypes.shape({
    name: _react.PropTypes.string.isRequired,
    publicRoom: _react.PropTypes.bool.isRequired,
    memberCount: _react.PropTypes.number.isRequired,
    creatorPrettyName: _react.PropTypes.string.isRequired
  })),
  streamType: _react.PropTypes.string.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  return {
    streamType: state.instance.streamType,
    postingLocations: state.instance.postingLocationRooms.slice()
  };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps)(PostingLocationInfo);