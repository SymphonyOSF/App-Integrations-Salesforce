'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.removeInstance = removeInstance;

var _effects = require('redux-saga/effects');

var _apiCalls = require('./apiCalls');

var _marked = [removeInstance].map(regeneratorRuntime.mark);

function removeInstance() {
  var instance;
  return regeneratorRuntime.wrap(function removeInstance$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.prev = 0;
          _context.next = 3;
          return (0, _effects.select)(function (state) {
            return state.instance;
          });

        case 3:
          instance = _context.sent;
          _context.next = 6;
          return (0, _effects.call)(_apiCalls.removeInstance, instance);

        case 6:
          _context.next = 8;
          return (0, _effects.put)({ type: 'SUCCESSFULLY_REMOVED' });

        case 8:
          _context.next = 16;
          break;

        case 10:
          _context.prev = 10;
          _context.t0 = _context['catch'](0);
          _context.next = 14;
          return (0, _effects.put)({ type: 'FETCH_FAILED', error: _context.t0 });

        case 14:
          _context.next = 16;
          return (0, _effects.put)({ type: 'FAILED_OPERATION' });

        case 16:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked[0], this, [[0, 10]]);
}