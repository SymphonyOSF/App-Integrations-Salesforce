'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.watchfier = watchfier;

var _effects = require('redux-saga/effects');

var _getInstanceList = require('./getInstanceList');

var _getInstance = require('./getInstance');

var _saveInstance = require('./saveInstance');

var _editInstance = require('./editInstance');

var _removeInstance = require('./removeInstance');

var _actions = require('../actions');

var _marked = [watchfier].map(regeneratorRuntime.mark);

function watchfier() {
  return regeneratorRuntime.wrap(function watchfier$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.prev = 0;
          _context.next = 3;
          return [(0, _effects.takeEvery)(_actions.FETCH_INSTANCE_LIST, _getInstanceList.getInstanceList), (0, _effects.takeEvery)(_actions.FETCH_INSTANCE_LIST, _getInstance.getInstance), (0, _effects.takeEvery)(_actions.SAVE_INSTANCE, _saveInstance.saveInstance), (0, _effects.takeEvery)(_actions.EDIT_INSTANCE, _editInstance.editInstance), (0, _effects.takeEvery)(_actions.REMOVE_INSTANCE, _removeInstance.removeInstance)];

        case 3:
          _context.next = 9;
          break;

        case 5:
          _context.prev = 5;
          _context.t0 = _context['catch'](0);
          _context.next = 9;
          return (0, _effects.put)({ type: _actions.FETCH_FAILED, error: _context.t0 });

        case 9:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked[0], this, [[0, 5]]);
}